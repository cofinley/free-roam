{"version":3,"sources":["features/view-pane/viewPaneSlice.js","features/links/PageLink.js","features/editor/References.js","features/block/blockModel.js","features/block/blockSlice.js","features/editor/editorSlice.js","features/search/Search.js","features/block/EditBlock.js","features/links/linksSlice.js","features/block/RenderedBlock.js","features/block/Block.js","features/editor/Breadcrumbs.js","features/block-actions/BlockActions.js","features/editor/Editor.js","features/navbar/navbarSlice.js","features/file-pane/filePaneSlice.js","features/navbar/Navbar.js","features/daily-notes/DailyNotes.js","features/io/io.js","features/all-pages/PagesTable.js","features/all-pages/AllPages.js","features/main/Main.js","features/file-pane/Shortcuts.js","features/file-pane/FilePane.js","features/view-pane/ViewPane.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["viewPaneSlice","createSlice","name","initialState","views","type","blockId","reducers","setViewPaneState","state","action","newState","payload","pushView","find","view","unshift","popView","filter","actions","PageLink","isPage","children","noStyling","afterClick","rest","dispatch","useDispatch","to","onClick","event","shiftKey","preventDefault","stopPropagation","className","References","block","isMain","useState","showUnlinkedRefs","setShowUnlinkedRefs","links","useSelector","blocks","references","id","parentId","length","map","referenceBlockId","referenceBlock","text","isRoot","linkedReferences","titlePat","RegExp","Object","values","otherBlock","test","unlinkedReferences","dayjs","extend","customParseFormat","DAILY_NOTE_DISPLAY_FORMAT","DAILY_NOTE_STORAGE_FORMAT","BlockModel","uuidv4","childrenIds","created","Date","now","dailyNote","dailyNoteTitleDate","isValid","format","updated","getPage","getLastChildLeaf","slice","serialize","newBlock","childId","childBlock","flattenTreeIds","concat","blocksSlice","setBlocksState","addBlock","push","removeBlock","parentBlock","childBlockId","removePage","caseReducers","changeParent","updateBlock","currentText","changeTitle","currentTitle","newTitle","linkPat","replace","repositionBlock","direction","blockIndex","indexOf","previousSibling","splice","grandParentBlock","parentBlockIndex","makeSibling","firstSiblingBlockId","secondSiblingBlockId","firstSibling","secondSibling","secondSiblingParent","secondSiblingIndex","firstSiblingParent","firstSiblingIndex","getBlockByText","editorSlice","focusedBlock","caretPos","setEditorState","updateFocusedBlock","Search","query","useLinks","onResultClick","onlyPages","allowCreation","onCreateClick","suggestions","searchResultBlocks","onMouseDown","bind","undefined","createPageLink","Fragment","EditBlock","isTitle","cursorCaret","setCursorCaret","onRender","textarea","useRef","searching","setSearching","editor","setQuery","onTab","target","selectionStart","onEnter","newBlockText","value","start","substring","remainingText","onOpenBracket","prevChar","charAt","selectionEnd","onBackspace","current","pageBlock","destinationBlock","prevSibling","getPrevSibling","getNextBlockUp","newCaretPos","isFocusedBlock","focus","ref","autoFocus","onFocus","offsetX","_textarea","symbolsToSkip","originalText","minDistance","translatedCaretPos","skippedSymbolIndexes","currentChar","includes","chars","split","join","getCaretCoordinates","x","left","y","top","distance","Math","sqrt","pow","offsetY","index","width","translateCursorToCaretPos","onKeyDown","keyCode","key","onChange","onBlur","defaultValue","blockToInsert","title","firstSurroundingBracketIndex","search","lastSurroundingBracketIndex","Array","from","matchAll","newValue","linksSlice","setLinksState","setLinks","sourceBlockId","linkedBlockIds","addedLinks","JSON","stringify","sort","removedLinks","destinationBlockId","_sourceBlockId","removeBlockLinks","destinationBlockIds","RenderedBlock","onEdit","linksFrom","renderLinks","Set","jsxArray","reactStringReplace","match","i","linkToPage","add","linksArray","blockInFromLinks","foundPage","newPageBlock","plaintext","element","jsx","compiler","React","cloneElement","rendered","Block","editing","setEditing","clickPosX","clientX","clickPosY","clientY","currentTarget","offsetLeft","offsetTop","offsetWidth","Breadcrumbs","breadcrumbs","parentBlockId","list","reverse","crumb","BlockActions","hasChildren","foldBlock","setFoldBlock","color","Editor","fold","foldNextLevel","setFoldNextLevel","useEffect","navbarSlice","searchQuery","setNavbarState","updateSearchQuery","removeShortcut","filePaneSlice","favoriteBlockIds","setFilePaneState","toggleShortcut","favoriteBlockId","Navbar","isFavorite","navbar","filePane","history","useHistory","getRoot","rootBlockId","favoriteButton","clearSearch","placeholder","page","advancedFormat","DailyNotes","props","dailyNoteBlocks","blockA","blockB","localeCompare","today","todayFormattedDate","todayDailyNoteBlock","dailyNoteEditors","save","files","zip","JSZip","file","content","fileName","generateAsync","then","saveAs","IO","s","accept","reader","FileReader","onload","parse","result","viewPane","readAsText","IndeterminateCheckbox","forwardRef","indeterminate","defaultRef","resolvedRef","PagesTable","columns","data","linksToBlocks","deleteRows","rows","row","original","treeBlockId","sourceBlock","linkRegex","updatedText","useTable","useSortBy","useRowSelect","hooks","visibleColumns","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","selectedFlatRows","selectedRowIds","keys","downloadRows","headerGroup","getHeaderGroupProps","headers","column","scope","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","AllPages","onMentionClick","useCallback","useMemo","accessor","sortType","rowA","rowB","desc","mentions","getData","Main","exact","path","params","Shortcuts","pageListItems","style","marginRight","FilePane","ViewPane","closeBlock","header","output","viewPaneBlocks","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","blocksReducer","filePaneReducer","viewPaneReducer","navbarReducer","linksReducer","editorReducer","window","addEventListener","returnValue","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfa6f219.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst viewPaneSlice = createSlice({\r\n  name: 'viewPane',\r\n  initialState: {\r\n    views: [\r\n      {\r\n        type: 'page',\r\n        blockId: 'abcd'\r\n      },\r\n      {\r\n        type: 'block',\r\n        blockId: 'a1'\r\n      },\r\n      {\r\n        type: 'references',\r\n        blockId: 'efgh'\r\n      }\r\n    ]\r\n  },\r\n  reducers: {\r\n    setViewPaneState: (state, action) => {\r\n      const newState = action.payload\r\n      if (newState && 'views' in newState) {\r\n        return newState\r\n      }\r\n    },\r\n    pushView: (state, action) => {\r\n      const { type, blockId } = action.payload\r\n      const viewExists = state.views.find(view => view.type === type && view.blockId === blockId)\r\n      if (!viewExists) {\r\n        state.views.unshift(action.payload)\r\n      }\r\n    },\r\n    popView: (state, action) => {\r\n      const { type, blockId } = action.payload\r\n      state.views = state.views.filter(view => (type !== 'all' && view.type !== type) || view.blockId !== blockId)\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setViewPaneState, pushView, popView } = viewPaneSlice.actions\r\nexport default viewPaneSlice.reducer","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './link.scss'\r\n\r\nimport { pushView } from '../view-pane/viewPaneSlice'\r\n\r\nconst PageLink = ({ blockId, isPage = true, children, noStyling, afterClick, ...rest }) => {\r\n  const dispatch = useDispatch()\r\n  const to = `/page/${blockId}`\r\n\r\n  const navigate = event => {\r\n    if (event.shiftKey) {\r\n      event.preventDefault()\r\n      dispatch(pushView({ type: isPage ? 'page' : 'block', blockId: blockId }))\r\n    }\r\n    if (afterClick) {\r\n      afterClick()\r\n    }\r\n    event.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      to={to}\r\n      onClick={navigate}\r\n      className={`block-link${noStyling ? ' block-link--no-styling' : ''}`}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default PageLink","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport PageLink from '../links/PageLink'\r\nimport Editor from './Editor'\r\n\r\nconst References = ({ block, isMain }) => {\r\n  const [showUnlinkedRefs, setShowUnlinkedRefs] = useState(false)\r\n  const links = useSelector(state => state.links)\r\n  const blocks = useSelector(state => state.blocks)\r\n  const references = links.to[block.id]\r\n\r\n  const linkedReferences = () => {\r\n    if (block.parentId || !references || !references.length) {\r\n      return\r\n    }\r\n    return references.map(referenceBlockId => {\r\n      if (!(referenceBlockId in blocks)) {\r\n        return null\r\n      }\r\n      const referenceBlock = blocks[referenceBlockId]\r\n      return (\r\n        <div key={referenceBlockId}>\r\n          <PageLink blockId={referenceBlockId}><h4>{referenceBlock.text}</h4></PageLink>\r\n          <Editor\r\n            blockId={referenceBlockId}\r\n            isRoot={false}\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  const unlinkedReferences = () => {\r\n    if (block.parentId || !showUnlinkedRefs) {\r\n      return\r\n    }\r\n    /* eslint-disable no-useless-escape */\r\n    const titlePat = new RegExp(`(?<![\\[\\w])${block.text}(?![\\[\\w]+)`, 'gi')\r\n    const references = Object.values(blocks)\r\n      .filter(otherBlock => otherBlock.parentId && titlePat.test(otherBlock.text))\r\n      .map(otherBlock => (\r\n        <div key={otherBlock.id}>\r\n          <PageLink blockId={otherBlock.id}>\r\n            <h4>{otherBlock.text}</h4>\r\n          </PageLink>\r\n          <Editor\r\n            blockId={otherBlock.id}\r\n            isRoot={false}\r\n            isMain={isMain}\r\n          />\r\n        </div>\r\n      ))\r\n    if (!references.length) {\r\n      return <span>No unlinked references</span>\r\n    }\r\n    return references\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {block.parentId === null && (references && references.length > 0) && isMain &&\r\n        <div className=\"references references--linked\">\r\n          <b>Linked References</b>\r\n          {linkedReferences()}\r\n        </div>\r\n      }\r\n      {block.parentId === null && isMain &&\r\n        <div className=\"references\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setShowUnlinkedRefs(!showUnlinkedRefs)}\r\n          >\r\n            Unlinked References\r\n          </button>\r\n          {showUnlinkedRefs &&\r\n            <div className=\"references references--unlinked\">\r\n              {unlinkedReferences()}\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default References","import { v4 as uuidv4 } from 'uuid'\r\nimport dayjs from 'dayjs'\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\r\n\r\ndayjs.extend(customParseFormat)\r\n\r\nexport const DAILY_NOTE_DISPLAY_FORMAT = 'MMMM Do, YYYY'\r\nexport const DAILY_NOTE_STORAGE_FORMAT = 'YYYY-MM-DD'\r\n\r\nexport const BlockModel = ({ id = uuidv4(), parentId = null, text, childrenIds = [], created = Date.now(), dailyNote = null } = {}) => {\r\n  const isPage = !parentId\r\n  if (isPage) {\r\n    if (!dailyNote) {\r\n      const dailyNoteTitleDate = dayjs(text, DAILY_NOTE_DISPLAY_FORMAT)\r\n      if (dailyNoteTitleDate.isValid()) {\r\n       dailyNote = dailyNoteTitleDate.format(DAILY_NOTE_STORAGE_FORMAT)\r\n      }\r\n    }\r\n  }\r\n  if (dailyNote) {\r\n    id = dailyNote\r\n  }\r\n  return {\r\n    id,\r\n    parentId,\r\n    text,\r\n    childrenIds,\r\n    created,\r\n    updated: null,\r\n    dailyNote\r\n  }\r\n}\r\n\r\nexport const getPage = (block, blocks) => {\r\n  if (!block.parentId) {\r\n    return block\r\n  }\r\n  const parentBlock = blocks[block.parentId]\r\n  return getPage(parentBlock, blocks)\r\n}\r\n\r\nexport const getPrevSibling = (block, blocks) => {\r\n  const parentBlock = blocks[block.parentId]\r\n  const blockIndex = parentBlock.childrenIds.indexOf(block.id)\r\n  if (blockIndex < 1) {\r\n    return null\r\n  }\r\n  const prevSiblingBlock = blocks[parentBlock.childrenIds[blockIndex - 1]]\r\n  return prevSiblingBlock\r\n}\r\n\r\nexport const getLastChildLeaf = (block, blocks) => {\r\n  if (!block.childrenIds.length) {\r\n    return block\r\n  }\r\n  const lastChildBlock = blocks[block.childrenIds.slice(-1)]\r\n  return getLastChildLeaf(lastChildBlock, blocks)\r\n}\r\n\r\nexport const getNextBlockUp = (block, blocks) => {\r\n  const prevSibling = getPrevSibling(block, blocks)\r\n  if (prevSibling) {\r\n    if (prevSibling.childrenIds.length) {\r\n      return getLastChildLeaf(prevSibling, blocks)\r\n    } else {\r\n      return prevSibling\r\n    }\r\n  } else {\r\n    const parentBlock = blocks[block.parentId]\r\n    return parentBlock\r\n  }\r\n}\r\n\r\nexport const serialize = (block, blocks) => {\r\n  const { childrenIds, ...newBlock} = block\r\n  if (!childrenIds.length) {\r\n    return newBlock\r\n  }\r\n  return {\r\n    ...newBlock,\r\n    children: childrenIds.map(childId => {\r\n      const childBlock  = blocks[childId]\r\n      return serialize(childBlock, blocks)\r\n    })\r\n  }\r\n}\r\n\r\nexport const flattenTreeIds = (block, blocks) => {\r\n  if (!block.childrenIds.length) {\r\n    return block.id\r\n  }\r\n  return [block.id].concat(...block.childrenIds.map(childId => flattenTreeIds(blocks[childId], blocks)))\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport { BlockModel } from './blockModel'\r\n\r\nconst DEFAULT_TEXT = 'Click here to edit'\r\n\r\nconst blocksSlice = createSlice({\r\n  name: 'blocks',\r\n  initialState: {\r\n    'abcd': { id: 'abcd', parentId: null, text: 'Hello World', childrenIds: ['ijkl', 'mnop'] },\r\n    'efgh': { id: 'efgh', parentId: null, text: 'Lorem ipsum', childrenIds: ['qrst'] },\r\n    'ijkl': { id: 'ijkl', parentId: 'abcd', text: 'Normal *italics* **bold** ***bold italics***', childrenIds: [] },\r\n    'mnop': { id: 'mnop', parentId: 'abcd', text: 'Link to [[Lorem ipsum]]', childrenIds: ['uvwx', 'a1'] },\r\n    'qrst': { id: 'qrst', parentId: 'efgh', text: 'Click here to edit', childrenIds: [] },\r\n    'uvwx': { id: 'uvwx', parentId: 'mnop', text: \"I'm a third layer block\", childrenIds: ['a2'] },\r\n    'a1': { id: 'a1', parentId: 'mnop', text: \"I'm another third layer block\", childrenIds: [] },\r\n    'a2': { id: 'a2', parentId: 'uvwx', text: \"I'm a fourth layer block\", childrenIds: [] },\r\n    '2021-02-17': BlockModel({ id: 'a3', text: 'February 17th, 2021', childrenIds: ['a4'], created: 1613546102000, dailyNote: '2021-02-17' }),\r\n    'a4': { id: 'a4', parentId: 'a3', text: 'Click here to edit', childrenIds: [] }\r\n  },\r\n  reducers: {\r\n    setBlocksState: (state, action) => {\r\n      const newState = action.payload\r\n      if (newState && typeof newState === 'object') {\r\n        return newState\r\n      }\r\n    },\r\n    addBlock: (state, action) => {\r\n      const block = action.payload\r\n      if (!block.parentId) {\r\n        const childBlock = BlockModel({ parentId: block.id, text: DEFAULT_TEXT })\r\n        block.childrenIds.push(childBlock.id)\r\n        state[childBlock.id] = childBlock\r\n      } else {\r\n        const parentBlock = state[block.parentId]\r\n        parentBlock.childrenIds.push(block.id)\r\n      }\r\n      state[block.id] = block\r\n    },\r\n    removeBlock: (state, action) => {\r\n      const { blockId } = action.payload\r\n      const block = state[blockId]\r\n      // Only allowed on leaves\r\n      if (block.childrenIds.length) {\r\n        return\r\n      }\r\n      const parentBlock = state[block.parentId]\r\n      state[block.parentId].childrenIds = parentBlock.childrenIds.filter(childBlockId => childBlockId !== blockId)\r\n      delete state[blockId]\r\n    },\r\n    removePage: (state, action) => {\r\n      const { blockId } = action.payload\r\n      const block = state[blockId]\r\n      if (!block.childrenIds.length) {\r\n        delete state[blockId]\r\n        return\r\n      }\r\n      for (const childBlockId of block.childrenIds) {\r\n        blocksSlice.caseReducers.removePage(state, { payload: { blockId: childBlockId }})\r\n      }\r\n      delete state[blockId]\r\n    },\r\n    changeParent: (state, action) => {\r\n      const { blockId, parentId } = action.payload\r\n      const block = state[blockId]\r\n      block.parentId = parentId\r\n      const parentBlock = state[parentId]\r\n      parentBlock.childrenIds.push(blockId)\r\n    },\r\n    updateBlock: (state, action) => {\r\n      const { blockId, parentId, childrenIds, text } = action.payload\r\n      const block = state[blockId]\r\n      if (block) {\r\n        block.parentId = parentId || block.parentId\r\n        block.childrenIds = childrenIds || block.childrenIds\r\n        const currentText = block.text\r\n        block.text = typeof text === 'string' ? text : currentText\r\n        block.updated = Date.now()\r\n        state[blockId] = block\r\n        if (!block.parentId) {\r\n          blocksSlice.caseReducers.changeTitle(state, { payload: { currentTitle: currentText, newTitle: text } })\r\n        }\r\n      }\r\n    },\r\n    changeTitle: (state, action) => {\r\n      const { currentTitle, newTitle } = action.payload\r\n      const linkPat = new RegExp(`\\\\[\\\\[${currentTitle}\\\\]\\\\]`, 'g')\r\n      Object.values(state)\r\n        .map(block => {\r\n          if (linkPat.test(block.text)) {\r\n            state[block.id].text = block.text.replace(`[[${currentTitle}]]`, `[[${newTitle}]]`)\r\n          }\r\n          return true\r\n        })\r\n    },\r\n    repositionBlock: (state, action) => {\r\n      const { blockId, direction } = action.payload\r\n      const block = state[blockId]\r\n      const parentBlock = state[block.parentId]\r\n      const blockIndex = parentBlock.childrenIds.indexOf(block.id)\r\n      if (direction === 'forward') {\r\n        if (blockIndex > 0) {\r\n          const previousSibling = state[parentBlock.childrenIds[blockIndex-1]]\r\n          parentBlock.childrenIds.splice(blockIndex, 1)\r\n          previousSibling.childrenIds.push(blockId)\r\n          block.parentId = previousSibling.id\r\n        }\r\n      } else {\r\n        const parentBlock = state[block.parentId]\r\n        if (parentBlock.parentId) {\r\n          const grandParentBlock = state[parentBlock.parentId]\r\n          const parentBlockIndex = grandParentBlock.childrenIds.indexOf(parentBlock.id)\r\n          if (parentBlockIndex !== -1) {\r\n            parentBlock.childrenIds.splice(blockIndex, 1)\r\n            grandParentBlock.childrenIds.splice(parentBlockIndex + 1, 0, blockId)\r\n            block.parentId = grandParentBlock.id\r\n          }\r\n        }\r\n      }\r\n    },\r\n    makeSibling: (state, action) => {\r\n      const { firstSiblingBlockId, secondSiblingBlockId } = action.payload\r\n      const firstSibling = state[firstSiblingBlockId]\r\n      if (firstSibling.parentId) {\r\n        const secondSibling = state[secondSiblingBlockId]\r\n        if (secondSibling.parentId) {\r\n          const secondSiblingParent = state[secondSibling.parentId]\r\n          const secondSiblingIndex = secondSiblingParent.childrenIds.indexOf(secondSiblingBlockId)\r\n          secondSiblingParent.childrenIds.splice(secondSiblingIndex, 1)\r\n        }\r\n        const firstSiblingParent = state[firstSibling.parentId]\r\n        const firstSiblingIndex = firstSiblingParent.childrenIds.indexOf(firstSiblingBlockId)\r\n        state[firstSiblingParent.id].childrenIds.splice(firstSiblingIndex+1, 0, secondSiblingBlockId)\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  setBlocksState,\r\n  getBlockByText,\r\n  addBlock,\r\n  removeBlock,\r\n  removePage,\r\n  updateBlock,\r\n  repositionBlock,\r\n  makeSibling\r\n} = blocksSlice.actions\r\nexport default blocksSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst editorSlice = createSlice({\r\n  name: 'editor',\r\n  initialState: {\r\n    focusedBlock: {\r\n        blockId: '',\r\n        isMain: true,\r\n        caretPos: 0\r\n    }\r\n  },\r\n  reducers: {\r\n    setEditorState: (state, action) => {\r\n      const newState = action.payload\r\n      if (newState && 'focusedBlock' in newState) {\r\n        return newState\r\n      }\r\n    },\r\n    updateFocusedBlock: (state, action) => {\r\n      state.focusedBlock = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setEditorState, updateFocusedBlock } = editorSlice.actions\r\nexport default editorSlice.reducer","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport './search.scss'\r\n\r\nimport PageLink from '../links/PageLink'\r\n\r\nconst Search = ({ query, useLinks, onResultClick, onlyPages, allowCreation, onCreateClick }) => {\r\n  const blocks = useSelector(state => state.blocks)\r\n\r\n  let suggestions = []\r\n  if (query && query.length) {\r\n    const searchResultBlocks = Object.values(blocks)\r\n      .filter(block => {\r\n        if (onlyPages && block.parentId !== null) {\r\n          return false\r\n        }\r\n        return block.text.indexOf(query) !== -1\r\n      })\r\n\r\n    suggestions = searchResultBlocks.map(block => {\r\n      if (useLinks) {\r\n        return (\r\n          <PageLink\r\n            blockId={block.id}\r\n            className=\"search-result\"\r\n            key={block.id}\r\n            afterClick={onResultClick}\r\n          >\r\n            {block.text}\r\n          </PageLink>\r\n        )\r\n      } else {\r\n        return (\r\n          <li\r\n            className=\"search-result\"\r\n            key={block.id}\r\n            onMouseDown={onResultClick.bind(null, block)}\r\n          >\r\n            {block.text}\r\n          </li>\r\n        )\r\n      }\r\n    })\r\n\r\n    if (allowCreation) {\r\n      const exactMatchExists = searchResultBlocks\r\n        .find(block => block.text === query) !== undefined\r\n      if (!exactMatchExists) {\r\n        const createPageLink =\r\n          <li\r\n            key={`new-page-${query}`}\r\n            className=\"search-result\"\r\n            onClick={onCreateClick}\r\n          >\r\n            <b>Create</b> {query}\r\n          </li>\r\n\r\n        suggestions.splice(0, 0, createPageLink)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {suggestions.length > 0 &&\r\n        <div className=\"search-results\">\r\n          <ul className=\"list-group list-group-flush\">\r\n            {suggestions}\r\n          </ul>\r\n        </div>\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport getCaretCoordinates from 'textarea-caret'\r\n\r\nimport { BlockModel, getPage, getNextBlockUp } from './blockModel'\r\nimport { addBlock, removeBlock, updateBlock, repositionBlock, makeSibling } from './blockSlice'\r\nimport { updateFocusedBlock } from '../editor/editorSlice'\r\nimport Search from '../search/Search'\r\n\r\nconst titleCharAllowed = keyCode => (\r\n  // Numbers and letters\r\n  (48 <= keyCode && keyCode < 91)\r\n  // Numpad numbers and symbols\r\n  || (96 <= keyCode && keyCode < 112 && keyCode !== 108)\r\n  // Symbols\r\n  || (186 <= keyCode)\r\n)\r\n\r\nconst EditBlock = ({ block, isMain, isTitle, cursorCaret, setCursorCaret, onRender }) => {\r\n  const dispatch = useDispatch()\r\n  const textarea = useRef(null)\r\n\r\n  const [searching, setSearching] = useState(false)\r\n  const focusedBlock = useSelector(state => state.editor.focusedBlock)\r\n  const blocks = useSelector(state => state.blocks)\r\n  const [query, setQuery] = useState(false)\r\n\r\n  const onKeyDown = event => {\r\n    if (event.key === 'Tab') {\r\n      onTab(event)\r\n    } else if (event.key === 'Enter' && !event.shiftKey) {\r\n      onEnter(event)\r\n    } else if (event.key === '[') {\r\n      onOpenBracket(event)\r\n    } else if (event.key === 'Backspace') {\r\n      onBackspace(event)\r\n    } else if (searching && titleCharAllowed(event.keyCode)) {\r\n      setQuery(query + event.key)\r\n    }\r\n  }\r\n\r\n  const onTab = event => {\r\n    event.preventDefault()\r\n    if (event.shiftKey) {\r\n      dispatch(repositionBlock({ blockId: block.id, direction: 'backward' }))\r\n    } else {\r\n      dispatch(repositionBlock({ blockId: block.id, direction: 'forward' }))\r\n    }\r\n    dispatch(updateFocusedBlock({ blockId: block.id, isMain, caretPos: event.target.selectionStart }))\r\n  }\r\n\r\n  const onEnter = event => {\r\n    event.preventDefault()\r\n    let newBlockText = ''\r\n    if (event.target.selectionStart !== event.target.value.length) {\r\n      // In-text Enter, cut\r\n      const start = event.target.selectionStart\r\n      newBlockText = block.text.substring(start)\r\n      const remainingText = block.text.substring(0, start)\r\n      dispatch(updateBlock({ blockId: block.id, text: remainingText }))\r\n      event.target.value = remainingText\r\n    }\r\n    const newBlock = BlockModel({ text: newBlockText, parentId: block.parentId })\r\n    dispatch(addBlock(newBlock))\r\n    dispatch(makeSibling({ firstSiblingBlockId: block.id, secondSiblingBlockId: newBlock.id }))\r\n    dispatch(updateFocusedBlock({ blockId: newBlock.id, isMain, caretPos: 0 }))\r\n  }\r\n\r\n  const onOpenBracket = event => {\r\n    event.preventDefault()\r\n    const caretPos = event.target.selectionStart\r\n    const value = event.target.value\r\n    const prevChar = value.charAt(caretPos - 1)\r\n    event.target.value = value.substring(0, caretPos) + '[]' + value.substring(caretPos, value.length)\r\n    event.target.selectionStart = caretPos + 1\r\n    event.target.selectionEnd = caretPos + 1\r\n    if (prevChar === '[' && !searching) {\r\n      setSearching(true)\r\n      setQuery('')\r\n    } else {\r\n      setSearching(false)\r\n    }\r\n  }\r\n\r\n  const onBackspace = event => {\r\n    if (textarea.current.selectionStart !== 0) {\r\n      return\r\n    }\r\n    if (block.childrenIds.length) {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    const pageBlock = getPage(block, blocks)\r\n    const isFirstPageChild = block.parentId === pageBlock.id && pageBlock.childrenIds[0] === block.id\r\n    if (isFirstPageChild) {\r\n      return\r\n    }\r\n    const destinationBlock = getNextBlockUp(block, blocks)\r\n    const newCaretPos = destinationBlock.text.length\r\n    dispatch(updateBlock({ blockId: destinationBlock.id, text: destinationBlock.text + block.text }))\r\n    dispatch(removeBlock({ blockId: block.id }))\r\n    dispatch(updateFocusedBlock({ blockId: destinationBlock.id, isMain, caretPos: newCaretPos }))\r\n  }\r\n\r\n  const insertPageTitleAtCursor = (blockToInsert, event) => {\r\n    event.preventDefault()\r\n    const title = blockToInsert.text\r\n    const value = textarea.current.value\r\n    const caretPos = textarea.current.selectionStart\r\n    const firstBracketPat = /\\[\\[(?!.*\\]\\])/gm\r\n    const lastBracketPat = /(?<!\\[\\[[^\\]]+)]]/gm\r\n    const firstSurroundingBracketIndex = value.substring(0, caretPos).search(firstBracketPat)\r\n    const lastSurroundingBracketIndex = Array.from(value.substring(caretPos).matchAll(lastBracketPat)).slice(-1)[0].index + caretPos\r\n    const beforeTitle = value.substring(0, firstSurroundingBracketIndex + 2)\r\n    const afterTitle = value.substring(lastSurroundingBracketIndex)\r\n    const newValue = beforeTitle + title + afterTitle\r\n    textarea.current.value = newValue\r\n    setSearching(false)\r\n    setQuery(null)\r\n    dispatch(updateBlock({ blockId: block.id, text: newValue }))\r\n  }\r\n\r\n  const translateCursorToCaretPos = (_textarea) => {\r\n    if (!_textarea) {\r\n      return\r\n    }\r\n\r\n    const symbolsToSkip = ['*', '_']\r\n    const originalText = _textarea.value\r\n\r\n    let minDistance = 10000\r\n    let translatedCaretPos = 0\r\n    let skippedSymbolIndexes = []\r\n    for (let caretPos = 0; caretPos <= _textarea.value.length; caretPos++) {\r\n      const currentChar = _textarea.value.charAt(caretPos)\r\n      if (symbolsToSkip.includes(currentChar)) {\r\n        const chars = _textarea.value.split('')\r\n        chars.splice(caretPos, 1)\r\n        _textarea.value = chars.join('')\r\n        skippedSymbolIndexes.push(caretPos)\r\n        caretPos--\r\n      }\r\n      const { left: x, top: y } = getCaretCoordinates(_textarea, caretPos)\r\n      const distance = Math.sqrt(Math.pow((x - cursorCaret.offsetX), 2) + Math.pow((y - cursorCaret.offsetY), 2))\r\n      if (distance < minDistance) {\r\n        minDistance = distance\r\n        translatedCaretPos = caretPos\r\n      }\r\n    }\r\n\r\n    _textarea.value = originalText\r\n    let newCaretPos = translatedCaretPos\r\n    if (skippedSymbolIndexes.length && skippedSymbolIndexes[0] <= newCaretPos) {\r\n      newCaretPos += skippedSymbolIndexes.filter(index => index <= translatedCaretPos).length\r\n    }\r\n    _textarea.selectionStart = newCaretPos\r\n    _textarea.selectionEnd = newCaretPos\r\n\r\n    setCursorCaret({ offsetX: null, offsetY: null, width: null })\r\n  }\r\n\r\n  const setCaretPos = event => {\r\n    if (isFocusedBlock) {\r\n      event.target.selectionStart = focusedBlock.caretPos\r\n    } else if (cursorCaret.offsetX !== null) {\r\n      translateCursorToCaretPos(event.target)\r\n    }\r\n  }\r\n\r\n  const save = event => {\r\n    if (!searching && block.text !== event.target.value) {\r\n      dispatch(updateBlock({ blockId: block.id, text: event.target.value }))\r\n    }\r\n  }\r\n\r\n  const isFocusedBlock = focusedBlock.blockId\r\n    && focusedBlock.blockId === block.id\r\n    && focusedBlock.isMain === isMain\r\n    && focusedBlock.caretPos\r\n\r\n  if (isFocusedBlock && textarea.current) {\r\n    textarea.current.focus()\r\n    textarea.current.selectionStart = focusedBlock.caretPos\r\n  }\r\n\r\n  return (\r\n    <div className=\"block__autocomplete-container\">\r\n      <TextareaAutosize\r\n        ref={textarea}\r\n        className={`block-text block-text--edit${isTitle ? ' block-text--title': ''}`}\r\n        autoFocus\r\n        onFocus={setCaretPos}\r\n        onKeyDown={onKeyDown}\r\n        onChange={save}\r\n        onBlur={onRender}\r\n        defaultValue={block.text}\r\n      />\r\n      {searching &&\r\n        <Search\r\n          query={query}\r\n          onlyPages\r\n          useLinks={false}\r\n          onResultClick={insertPageTitleAtCursor}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditBlock","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n/* State:\r\n{\r\n  to: { destination: [source1, source2] }},\r\n  from: { source1: [destination], source2: [destination] }}\r\n}\r\n\r\n'to' holds backlinks, 'from' holds source blocks and helps build 'to'\r\n*/\r\n\r\nconst linksSlice = createSlice({\r\n  name: 'links',\r\n  initialState: {\r\n    to: {\r\n      'efgh': ['mnop']\r\n    },\r\n    from: {\r\n      'mnop': ['efgh']\r\n    }\r\n  },\r\n  reducers: {\r\n    setLinksState: (state, action) => {\r\n      const newState = action.payload\r\n      if (newState && 'to' in newState && 'from' in newState) {\r\n        return newState\r\n      }\r\n    },\r\n    setLinks: (state, action) => {\r\n      const { sourceBlockId, linkedBlockIds } = action.payload\r\n      if (!sourceBlockId || !linkedBlockIds || !linkedBlockIds.length) {\r\n        return\r\n      }\r\n\r\n      let addedLinks\r\n\r\n      if (sourceBlockId in state.from) {\r\n        if (JSON.stringify(state.from[sourceBlockId].sort()) === JSON.stringify(linkedBlockIds.sort())) {\r\n          return\r\n        }\r\n\r\n        const removedLinks = state.from[sourceBlockId].filter(destinationBlockId => !linkedBlockIds.includes(destinationBlockId))\r\n        if (removedLinks.length) {\r\n          removedLinks.map(destinationBlockId => {\r\n            state.to[destinationBlockId] = state.to[destinationBlockId].filter(_sourceBlockId => sourceBlockId !== _sourceBlockId)\r\n            return true\r\n          })\r\n        }\r\n\r\n        addedLinks = linkedBlockIds.filter(destinationBlockId => !state.from[sourceBlockId].includes(destinationBlockId))\r\n      } else {\r\n        addedLinks = linkedBlockIds\r\n      }\r\n\r\n      if (addedLinks.length) {\r\n        addedLinks.map(destinationBlockId => {\r\n          if (!(destinationBlockId in state.to)) {\r\n            state.to[destinationBlockId] = []\r\n          }\r\n          state.to[destinationBlockId].push(sourceBlockId)\r\n          return true\r\n        })\r\n      }\r\n\r\n      state.from[sourceBlockId] = linkedBlockIds\r\n    },\r\n    removeBlockLinks: (state, action) => {\r\n      const { blockId } = action.payload\r\n      const destinationBlockIds = state.from[blockId]\r\n      linksSlice.caseReducers.setLinks(state, { payload: { sourceBlockId: blockId, linkedBlockIds: [] }})\r\n      if (destinationBlockIds) {\r\n        destinationBlockIds\r\n          .map(destinationBlockId => {\r\n            state.to[destinationBlockId] = state.to[destinationBlockId]\r\n              .filter(sourceBlockId => sourceBlockId !== blockId)\r\n            return true\r\n          })\r\n      }\r\n      delete state.from[blockId]\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setLinksState, setLinks, removeBlockLinks } = linksSlice.actions\r\nexport default linksSlice.reducer","import React from 'react';\r\nimport { compiler } from 'markdown-to-jsx'\r\nimport reactStringReplace from \"react-string-replace\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addBlock } from './blockSlice'\r\nimport { BlockModel } from './blockModel'\r\nimport PageLink from '../links/PageLink'\r\nimport { setLinks } from '../links/linksSlice'\r\n\r\nconst RenderedBlock = ({ block, isTitle, onEdit }) => {\r\n  const dispatch = useDispatch()\r\n  const blocks = useSelector(state => state.blocks)\r\n  const linksFrom = useSelector(state => state.links.from)\r\n\r\n  const rendered = () => {\r\n    const plaintext = block.text\r\n    const linkedPlaintext = renderLinks(plaintext)\r\n    const jsxMdArray = linkedPlaintext\r\n      .map(element => {\r\n        if (typeof element === 'string') {\r\n          const jsx = compiler(element)\r\n          const keyedJsx = React.cloneElement(jsx, { key: element })\r\n          return keyedJsx\r\n        }\r\n        return element\r\n      })\r\n    return jsxMdArray\r\n  }\r\n\r\n  const renderLinks = text => {\r\n    const pat = /\\[\\[([^[\\]]*)\\]\\]/g\r\n    const links = new Set()\r\n    const jsxArray = reactStringReplace(text, pat, (match, i) => {\r\n      const pageBlock = linkToPage(match)\r\n      links.add(pageBlock.id)\r\n      return (\r\n        <PageLink\r\n          key={`${match}-${i}`}\r\n          blockId={pageBlock.id}\r\n        >\r\n          {pageBlock.text}\r\n        </PageLink>\r\n      )\r\n    })\r\n    const linksArray = Array.from(links)\r\n    const blockInFromLinks = block.id in linksFrom\r\n    if (linksArray.length) {\r\n      if (!(blockInFromLinks) || JSON.stringify(linksArray.sort()) !== JSON.stringify(linksFrom[block.id].sort())) {\r\n        dispatch(setLinks({ sourceBlockId: block.id, linkedBlockIds: linksArray }))\r\n      }\r\n    }\r\n    return jsxArray\r\n  }\r\n\r\n  const linkToPage = text => {\r\n    const foundPage = Object.values(blocks)\r\n      .filter(block => !block.parentId)\r\n      .find(block => block.text === text)\r\n    if (foundPage) {\r\n      return foundPage\r\n    }\r\n    const newPageBlock = BlockModel({ text })\r\n    dispatch(addBlock(newPageBlock))\r\n    return newPageBlock\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className={`block-text${isTitle ? ' block-text--title': ''}`}\r\n      onClick={onEdit}\r\n    >\r\n      {rendered()}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default RenderedBlock","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport './block.scss'\r\n\r\nimport EditBlock from './EditBlock'\r\nimport RenderedBlock from './RenderedBlock'\r\n\r\nconst Block = ({ block, isMain, isTitle }) => {\r\n  const focusedBlock = useSelector(state => state.editor.focusedBlock)\r\n  const [editing, setEditing] = useState(focusedBlock.isMain === isMain && focusedBlock.blockId === block.id)\r\n  const [cursorCaret, setCursorCaret] = useState({ offsetX: null, offsetY: null, width: null })\r\n\r\n  const edit = event => {\r\n    if (block.dailyNote) {\r\n      // Don't allow daily note date titles to be edited\r\n      return\r\n    }\r\n    const clickPosX = event.clientX\r\n    const clickPosY = event.clientY\r\n    const blockX = event.currentTarget.offsetLeft\r\n    const blockY = event.currentTarget.offsetTop\r\n    const offsetX = clickPosX - blockX\r\n    const offsetY = clickPosY - blockY\r\n    const width = event.currentTarget.offsetWidth\r\n    setCursorCaret({ offsetX, offsetY, width })\r\n    setEditing(true)\r\n  }\r\n\r\n  const render = event => {\r\n    setEditing(false)\r\n  }\r\n\r\n  const isFocusedBlock = focusedBlock.blockId\r\n    && focusedBlock.blockId === block.id\r\n    && focusedBlock.isMain === isMain\r\n    && focusedBlock.caretPos\r\n\r\n  if (isFocusedBlock && !editing) {\r\n    setEditing(true)\r\n  }\r\n\r\n  return (\r\n      <div className=\"block\">\r\n      {editing\r\n        ?\r\n          <EditBlock\r\n            block={block}\r\n            isMain={isMain}\r\n            isTitle={isTitle}\r\n            cursorCaret={cursorCaret}\r\n            setCursorCaret={setCursorCaret}\r\n            onRender={render}\r\n          />\r\n        :\r\n          <RenderedBlock\r\n            block={block}\r\n            isTitle={isTitle}\r\n            onEdit={edit}\r\n          />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Block","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\n//import \"./style.scss\"\r\n\r\nimport PageLink from '../links/PageLink'\r\n\r\nconst Breadcrumbs = ({ block }) => {\r\n  const blocks = useSelector(state => state.blocks)\r\n\r\n  const breadcrumbs = (parentBlockId, list = []) => {\r\n    if (!parentBlockId) {\r\n      return list.reverse()\r\n    }\r\n    const parentBlock = blocks[parentBlockId]\r\n    const crumb = <PageLink\r\n      blockId={parentBlockId}\r\n      key={parentBlockId}\r\n      isPage={parentBlock.parentId === null}\r\n      noStyling\r\n    >\r\n      {parentBlock.text}\r\n    </PageLink>\r\n    return breadcrumbs(parentBlock.parentId, list.concat(crumb))\r\n  }\r\n\r\n  return (\r\n    <div className=\"breadcrumbs text-muted\">\r\n      {breadcrumbs(block.parentId)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Breadcrumbs","import React from 'react'\r\nimport { CaretRightFill, CaretDownFill } from 'react-bootstrap-icons'\r\n\r\nimport './block-actions.scss'\r\n\r\nimport PageLink from '../links/PageLink'\r\n\r\nconst BlockActions = ({ block, hasChildren, foldBlock, setFoldBlock }) => {\r\n  return (\r\n    <div className=\"block-actions-container\">\r\n      <span className={`block-actions block-actions--toggle${hasChildren ? '' : ' hidden'}`}>\r\n        {foldBlock &&\r\n          <CaretRightFill color=\"white\" onClick={() => setFoldBlock(false)} />\r\n        }\r\n        {!foldBlock &&\r\n          <CaretDownFill color=\"white\" onClick={() => setFoldBlock(true)} />\r\n        }\r\n      </span>\r\n      <PageLink\r\n        blockId={block.id}\r\n        noStyling\r\n        isPage={false}\r\n      >\r\n        <div className={`block-actions block-actions--bullet${foldBlock && hasChildren ? ' fold' : ''}`}>\r\n          <span>•</span>\r\n        </div>\r\n      </PageLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlockActions","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './editor.scss'\r\n\r\nimport References from './References'\r\nimport Block from '../block/Block'\r\nimport Breadcrumbs from './Breadcrumbs'\r\nimport BlockActions from '../block-actions/BlockActions';\r\n\r\nconst Editor = ({ blockId, isRoot, isMain, fold = false }) => {\r\n  const blocks = useSelector(state => state.blocks)\r\n  const block = blocks[blockId]\r\n  const [foldBlock, setFoldBlock] = useState(fold)\r\n  const [foldNextLevel, setFoldNextLevel] = useState(false)\r\n\r\n  // Make sure fold prop informs the foldBlock hook state on update\r\n  useEffect(() => {\r\n    setFoldBlock(fold);\r\n   }, [fold])\r\n\r\n  if (!block) {\r\n    return <h1 className=\"text-light\">Page not found</h1>\r\n  }\r\n\r\n  const isPage = block.parentId === null\r\n  const isTitle = isPage && isRoot\r\n\r\n  const children = block.childrenIds.map(childBlockId => (\r\n    <Editor\r\n      key={childBlockId}\r\n      isRoot={false}\r\n      isMain={isMain}\r\n      blockId={childBlockId}\r\n      fold={foldNextLevel}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div className={`editor ${isRoot ? 'editor--root' : 'editor--child'}${isPage ? ' editor--page' : ''}`}>\r\n      {isRoot && !isPage &&\r\n        <Breadcrumbs block={block} />\r\n      }\r\n      <div className=\"d-flex\">\r\n        {!isTitle &&\r\n          <BlockActions\r\n            block={block}\r\n            foldBlock={foldBlock}\r\n            setFoldBlock={setFoldBlock}\r\n            hasChildren={children.length > 0}\r\n          />\r\n        }\r\n        <Block\r\n          block={block}\r\n          isTitle={isTitle}\r\n          isMain={isMain}\r\n        />\r\n      </div>\r\n      {!foldBlock && children.length > 0 &&\r\n        <div className=\"editor__children\">\r\n          {block.parentId !== null &&\r\n            <div\r\n              className=\"editor__children__thread-line\"\r\n              onClick={() => setFoldNextLevel(!foldNextLevel)}\r\n            />\r\n          }\r\n          <div className=\"editor__children__container\">\r\n            {children}\r\n          </div>\r\n        </div>\r\n      }\r\n      {isRoot &&\r\n        <References\r\n          block={block}\r\n          isMain={isMain}\r\n          key={block.id}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editor","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst navbarSlice = createSlice({\r\n  name: 'navbar',\r\n  initialState: {\r\n    searchQuery: ''\r\n  },\r\n  reducers: {\r\n    setNavbarState: (state, action) => {\r\n      const newState = action.payload\r\n      if (newState && 'searchQuery' in newState) {\r\n        return newState\r\n      }\r\n    },\r\n    updateSearchQuery: (state, action) => {\r\n      const { query } = action.payload\r\n      state.searchQuery = query\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setNavbarState, updateSearchQuery, removeShortcut } = navbarSlice.actions\r\nexport default navbarSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst filePaneSlice = createSlice({\r\n  name: 'filePane',\r\n  initialState: {\r\n    favoriteBlockIds: ['abcd', 'efgh']\r\n  },\r\n  reducers: {\r\n    setFilePaneState: (state, action) => {\r\n      const newState = action.payload\r\n      if (newState && 'favoriteBlockIds' in newState) {\r\n        return newState\r\n      }\r\n    },\r\n    toggleShortcut: (state, action) => {\r\n      const { blockId } = action.payload\r\n      const index = state.favoriteBlockIds.indexOf(blockId)\r\n      if (index > -1) {\r\n        state.favoriteBlockIds = state.favoriteBlockIds.filter(favoriteBlockId => blockId !== favoriteBlockId)\r\n      } else {\r\n        state.favoriteBlockIds.push(blockId)\r\n      }\r\n    },\r\n    removeShortcut: (state, action) => {\r\n      const { blockId } = action.payload\r\n      state.favoriteBlockIds = state.favoriteBlockIds.filter(favoriteBlockId => favoriteBlockId !== blockId)\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setFilePaneState, toggleShortcut, removeShortcut } = filePaneSlice.actions\r\nexport default filePaneSlice.reducer","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Star, StarFill, Search as SearchIcon } from 'react-bootstrap-icons'\r\n\r\nimport './navbar.scss'\r\n\r\nimport { updateSearchQuery } from './navbarSlice'\r\nimport { toggleShortcut } from '../file-pane/filePaneSlice'\r\nimport { addBlock } from '../block/blockSlice'\r\nimport { BlockModel } from '../block/blockModel'\r\nimport Search from '../search/Search'\r\n\r\nconst Navbar = ({ blockId }) => {\r\n  const dispatch = useDispatch()\r\n  const searchQuery = useSelector(state => state.navbar.searchQuery)\r\n  const blocks = useSelector(state => state.blocks)\r\n  const favoriteBlockIds = useSelector(state => state.filePane.favoriteBlockIds)\r\n  const history = useHistory()\r\n\r\n  const getRoot = block => {\r\n    if (!block.parentId) {\r\n      return block.id\r\n    }\r\n    return getRoot(blocks[block.parentId])\r\n  }\r\n\r\n  let isFavorite\r\n  if (blockId) {\r\n    const block = blocks[blockId]\r\n    if (block) {\r\n      const rootBlockId = getRoot(block)\r\n      isFavorite = favoriteBlockIds.includes(rootBlockId)\r\n    }\r\n  }\r\n\r\n  const toggleFavorite = event => {\r\n    const rootBlockId = getRoot(blocks[blockId])\r\n    dispatch(toggleShortcut({ blockId: rootBlockId }))\r\n  }\r\n\r\n  let favoriteButton\r\n  if (isFavorite !== undefined) {\r\n    if (isFavorite) {\r\n      favoriteButton = <StarFill color=\"white\" />\r\n    } else {\r\n      favoriteButton = <Star color=\"white\" />\r\n    }\r\n  }\r\n\r\n  const clearSearch = event => {\r\n    dispatch(updateSearchQuery({ query: '' }))\r\n  }\r\n\r\n  const createAndNavigateToPage = () => {\r\n    const page = BlockModel({ text: searchQuery })\r\n    dispatch(addBlock(page))\r\n    clearSearch()\r\n    history.push(`/page/${page.id}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"search-container\">\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text bg-dark text-dark border-secondary\"><SearchIcon color=\"white\" /></span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control bg-dark text-light border-secondary\"\r\n            placeholder=\"Find or Create Page\"\r\n            onChange={(event) => dispatch(updateSearchQuery({ query: event.target.value }))}\r\n            value={searchQuery}\r\n          />\r\n        </div>\r\n        <Search\r\n          query={searchQuery}\r\n          useLinks\r\n          onResultClick={clearSearch}\r\n          allowCreation\r\n          onCreateClick={createAndNavigateToPage}\r\n        />\r\n      </div>\r\n      {favoriteButton !== undefined &&\r\n        <button className=\"btn btn--toggle-favorite\" onClick={toggleFavorite}>{favoriteButton}</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\r\n\r\nimport Editor from '../editor/Editor'\r\nimport { addBlock } from '../block/blockSlice'\r\nimport { BlockModel, DAILY_NOTE_STORAGE_FORMAT, DAILY_NOTE_DISPLAY_FORMAT } from '../block/blockModel'\r\n\r\nimport './daily-notes.scss'\r\n\r\ndayjs.extend(advancedFormat)\r\n\r\nconst DailyNotes = props => {\r\n  const dispatch = useDispatch()\r\n  const blocks = useSelector(state => state.blocks)\r\n  const dailyNoteBlocks = Object.values(blocks)\r\n    .filter(block => !!block.dailyNote)\r\n    .sort((blockA, blockB) => blockA.dailyNote.localeCompare(blockB.dailyNote))\r\n    .reverse()\r\n\r\n  // Create today's note if it doesn't exist\r\n  const today = dayjs()\r\n  const todayFormattedDate = today.format(DAILY_NOTE_DISPLAY_FORMAT)\r\n  let todayDailyNoteBlock = dailyNoteBlocks.find(block => block.text === todayFormattedDate)\r\n  if (!todayDailyNoteBlock) {\r\n    todayDailyNoteBlock = BlockModel({ text: todayFormattedDate, dailyNote: today.format(DAILY_NOTE_STORAGE_FORMAT) })\r\n    dispatch(addBlock(todayDailyNoteBlock))\r\n  }\r\n\r\n  const dailyNoteEditors = dailyNoteBlocks\r\n    .map(block => <Editor key={block.id} blockId={block.id} isMain isRoot />)\r\n\r\n  return (\r\n    <div className=\"daily-notes\">\r\n      {dailyNoteEditors}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailyNotes","import { useSelector, useDispatch } from 'react-redux'\r\nimport { saveAs } from 'file-saver'\r\nimport JSZip from 'jszip'\r\n\r\nimport './io.scss'\r\n\r\nimport { setBlocksState } from \"../block/blockSlice\";\r\nimport { setEditorState } from \"../editor/editorSlice\";\r\nimport { setFilePaneState } from \"../file-pane/filePaneSlice\";\r\nimport { setLinksState } from \"../links/linksSlice\";\r\nimport { setNavbarState } from \"../navbar/navbarSlice\";\r\nimport { setViewPaneState } from \"../view-pane/viewPaneSlice\";\r\n\r\nexport const save = files => {\r\n  const zip = new JSZip()\r\n  files.map(file => {\r\n    const { content, fileName } = file\r\n    zip.file(fileName || 'free-roam.json', JSON.stringify(content))\r\n    return true\r\n  })\r\n  zip.generateAsync({type:\"blob\"})\r\n    .then(content => {\r\n      saveAs(content, `Free-Roam-Export-${Date.now()}`)\r\n    })\r\n}\r\n\r\nconst IO = props => {\r\n  const dispatch = useDispatch()\r\n  const s = useSelector(state => state)\r\n\r\n  const load = event => {\r\n    event.preventDefault()\r\n    const reader = new FileReader()\r\n    reader.onload = event => {\r\n      const newState = JSON.parse(event.target.result)\r\n      if ('blocks' in newState) {\r\n        dispatch(setBlocksState(newState.blocks))\r\n      }\r\n      if ('editor' in newState) {\r\n        dispatch(setEditorState(newState.editor))\r\n      }\r\n      if ('filePane' in newState) {\r\n        dispatch(setFilePaneState(newState.filePane))\r\n      }\r\n      if ('links' in newState) {\r\n        dispatch(setLinksState(newState.links))\r\n      }\r\n      if ('navbar' in newState) {\r\n        dispatch(setNavbarState(newState.navbar))\r\n      }\r\n      if ('viewPane' in newState) {\r\n        dispatch(setViewPaneState(newState.viewPane))\r\n      }\r\n    }\r\n    reader.readAsText(event.target.files[0])\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <label className=\"load-button-input mr-3\">\r\n        <input type=\"file\" className=\"btn btn-secondary\" accept=\".json\" onChange={load} />\r\n      </label>\r\n      <button className=\"btn btn-secondary\" onClick={() => save([{ content: s, fileName: 'free-roam.json' }])}>Save</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IO","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useTable, useSortBy, useRowSelect } from 'react-table'\r\nimport { ChevronDown, ChevronUp, Trash, Download } from 'react-bootstrap-icons'\r\n\r\nimport { save } from '../io/io'\r\nimport { serialize, flattenTreeIds } from '../block/blockModel'\r\nimport { updateBlock, removePage } from '../block/blockSlice'\r\nimport { popView } from '../view-pane/viewPaneSlice'\r\nimport { removeShortcut } from '../file-pane/filePaneSlice'\r\nimport { removeBlockLinks } from '../links/linksSlice'\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\nconst PagesTable = ({ columns, data }) => {\r\n  const dispatch = useDispatch()\r\n  const blocks = useSelector(state => state.blocks)\r\n  const linksToBlocks = useSelector(state => state.links.to)\r\n\r\n  const downloadRows = rows => {\r\n    if (!rows.length) {\r\n      return\r\n    }\r\n    const files = rows\r\n      .map(row => row.original.blockId)\r\n      .map(blockId => {\r\n        const block = blocks[blockId]\r\n        return { content: serialize(block, blocks), fileName: `${block.text}.json`}\r\n      })\r\n    save(files)\r\n  }\r\n\r\n  /**\r\n   * Delete pages\r\n   * This will:\r\n   *   - Remove all children blocks of pages\r\n   *   - Remove all links to and from the pages' children blocks\r\n   *   - Remove all shortcuts to pages\r\n   * @param {object} rows - table rows\r\n   */\r\n  const deleteRows = rows => {\r\n    if (!rows.length) {\r\n      return\r\n    }\r\n    rows\r\n      .map(row => row.original.blockId)\r\n      .map(blockId => {\r\n        const block = blocks[blockId]\r\n        const treeIds = flattenTreeIds(blocks[blockId], blocks)\r\n        treeIds.map(treeBlockId => {\r\n          dispatch(popView({ type: 'all', blockId: treeBlockId }))\r\n          const blocksLinkingToBlockId = linksToBlocks[treeBlockId] || []\r\n          blocksLinkingToBlockId.map(sourceBlockId => {\r\n            const sourceBlock = blocks[sourceBlockId]\r\n            const linkRegex = new RegExp(`\\\\[\\\\[(${block.text})\\\\]\\\\]`, 'g')\r\n            const updatedText = sourceBlock.text.replace(linkRegex, '$1')\r\n            dispatch(updateBlock({ blockId: sourceBlockId, text: updatedText }))\r\n            return true\r\n          })\r\n          dispatch(removeBlockLinks({ blockId: treeBlockId }))\r\n          return true\r\n        })\r\n        dispatch(removeShortcut({ blockId }))\r\n        dispatch(removePage({ blockId }))\r\n        return true\r\n      })\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n    state: { selectedRowIds }\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy,\r\n    useRowSelect,\r\n    hooks => {\r\n      hooks.visibleColumns.push(columns => [\r\n        {\r\n          id: 'selection',\r\n          Header: ({ getToggleAllRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n            </div>\r\n          ),\r\n          Cell: ({ row }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ])\r\n    }\r\n  )\r\n  return (\r\n    <>\r\n      <div className=\"all-pages__toolbar\">\r\n        <Trash\r\n          onClick={() => deleteRows(selectedFlatRows)}\r\n          className={`mr-3 all-pages__button${Object.keys(selectedRowIds).length ? ' active': ''}`}\r\n        />\r\n        <Download\r\n          onClick={() => downloadRows(selectedFlatRows)}\r\n          className={`all-pages__button${Object.keys(selectedRowIds).length ? ' active': ''}`}\r\n        />\r\n        <div className=\"flex-grow-1\" />\r\n      </div>\r\n      <table className=\"table table-dark\" {...getTableProps()}>\r\n        <thead className=\"thead-dark\">\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th scope=\"col\" {...column.getHeaderProps([\r\n                  {\r\n                    className: column.className,\r\n                  },\r\n                  column.getSortByToggleProps(),\r\n                ])}>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? <ChevronDown color=\"white\" />\r\n                        : <ChevronUp color=\"white\" />\r\n                      : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(\r\n            (row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return (\r\n                      <td {...cell.getCellProps([\r\n                        {\r\n                          className: cell.column.className,\r\n                        }\r\n                      ])}>\r\n                        {cell.render('Cell')}\r\n                      </td>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )}\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PagesTable","import React, { useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\r\n\r\nimport PagesTable from './PagesTable'\r\nimport { DAILY_NOTE_DISPLAY_FORMAT } from '../block/blockModel'\r\nimport PageLink from '../links/PageLink'\r\nimport { pushView } from '../view-pane/viewPaneSlice'\r\n\r\nimport './all-pages.scss'\r\n\r\ndayjs.extend(advancedFormat)\r\n\r\nconst getData = (blocks, linksToBlocks) => {\r\n  return Object.values(blocks)\r\n    .filter(block => !block.parentId)\r\n    .map(block => ({\r\n      text: block.text,\r\n      blockId: block.id,\r\n      created: block.created,\r\n      updated: block.updated,\r\n      mentions: linksToBlocks[block.id] || []\r\n    }))\r\n}\r\n\r\n\r\nconst AllPages = props => {\r\n  const dispatch = useDispatch()\r\n  const blocks = useSelector(state => state.blocks)\r\n  const linksToBlocks = useSelector(state => state.links.to)\r\n\r\n  const onMentionClick = useCallback((blockId, event) => {\r\n    dispatch(pushView({ type: 'references', blockId }))\r\n  }, [dispatch])\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Title',\r\n        className: 'font-weight-bold',\r\n        accessor: (row) => <PageLink key={row.blockId} blockId={row.blockId}>{row.text}</PageLink>,\r\n        sortType: (rowA, rowB, id, desc) => rowA.original.text.localeCompare(rowB.original.text)\r\n      }, {\r\n        Header: 'Mentions',\r\n        accessor: 'mentions',\r\n        className: 'text-center',\r\n        Cell: ({ row, value }) => <div className=\"mentions-bubble\" onClick={onMentionClick.bind(null, row.original.blockId)}><span>{value.length}</span></div>,\r\n        sortType: (rowA, rowB, id, desc) => rowA.original.mentions.length - rowB.original.mentions.length\r\n      }, {\r\n        Header: 'Updated',\r\n        accessor: 'updated',\r\n        className: 'text-right',\r\n        Cell: ({ value }) => value ? dayjs(value).format(DAILY_NOTE_DISPLAY_FORMAT) : null\r\n      }, {\r\n        Header: 'Created',\r\n        accessor: 'created',\r\n        className: 'text-right',\r\n        Cell: ({ value }) => value ? dayjs(value).format(DAILY_NOTE_DISPLAY_FORMAT) : null\r\n      }\r\n    ],\r\n    [onMentionClick]\r\n  )\r\n\r\n  const data = React.useMemo(() => getData(blocks, linksToBlocks), [blocks, linksToBlocks])\r\n\r\n  return (\r\n    <div className=\"all-pages\">\r\n      <PagesTable columns={columns} data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllPages","import React from 'react'\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport './main.scss'\r\n\r\nimport Editor from '../editor/Editor'\r\nimport Navbar from '../navbar/Navbar'\r\nimport DailyNotes from '../daily-notes/DailyNotes'\r\nimport AllPages from '../all-pages/AllPages'\r\n\r\nconst Main = ({ blockId }) => {\r\n  return (\r\n    <div className=\"main\">\r\n      <Navbar blockId={blockId}/>\r\n      <div className=\"stage\">\r\n        <Route\r\n          exact={true}\r\n          path=\"/\"\r\n          render={() => (\r\n            <Editor blockId={null} isRoot isMain />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/page/:blockId\"\r\n          render={({ match }) => (\r\n            <Editor blockId={match.params.blockId} isRoot isMain />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/daily-notes\"\r\n          render={() => (\r\n            <DailyNotes />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/all-pages\"\r\n          render={() => (\r\n            <AllPages />\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport PageLink from '../links/PageLink'\r\n\r\nfunction Shortcuts(props) {\r\n  const blocks = useSelector(state => state.blocks)\r\n  const favoriteBlockIds = useSelector(state => state.filePane.favoriteBlockIds)\r\n\r\n  const pageListItems = favoriteBlockIds.map(blockId => {\r\n    const block = blocks[blockId]\r\n    return (\r\n      <PageLink\r\n        blockId={blockId}\r\n        key={blockId}\r\n        className=\"list-group-item list-group-item-action bg-dark text-light\"\r\n      >\r\n        {block.text}\r\n      </PageLink>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h5><StarFill color=\"white\" width=\"15px\" style={{ marginRight: \"10px\" }} />Shortcuts</h5>\r\n      <div className=\"list-group list-group-flush mt-3\">\r\n        {pageListItems}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shortcuts","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Calendar3, Justify } from 'react-bootstrap-icons'\r\n\r\nimport './file-pane.scss'\r\n\r\nimport Shortcuts from './Shortcuts'\r\nimport IO from '../io/io'\r\n\r\nconst FilePane = props => {\r\n  return (\r\n    <div className=\"pane file-pane\">\r\n      <Link to=\"/\"><h2 className=\"text-light text-center\">Free-roam</h2></Link>\r\n      <IO />\r\n      <div className=\"list-group list-group-flush mt-3\">\r\n        <Link to=\"/daily-notes\" className=\"list-group-item list-group-item-action bg-dark text-light\">\r\n          <Calendar3 color=\"white\" /> Daily Notes\r\n        </Link>\r\n        <Link to=\"/all-pages\" className=\"list-group-item list-group-item-action bg-dark text-light\">\r\n          <Justify color=\"white\" /> All Pages\r\n        </Link>\r\n      </div>\r\n      <hr />\r\n      <Shortcuts />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilePane","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { X } from \"react-bootstrap-icons\";\r\n\r\nimport './view-pane.scss'\r\n\r\nimport { popView } from './viewPaneSlice'\r\nimport Editor from '../editor/Editor'\r\nimport PageLink from '../links/PageLink';\r\nimport References from '../editor/References';\r\n\r\nconst ViewPane = props => {\r\n  const blocks = useSelector(state => state.blocks)\r\n  const views = useSelector(state => state.viewPane.views)\r\n  const dispatch = useDispatch()\r\n\r\n  const closeBlock = (type, blockId, event) => {\r\n    dispatch(popView({ type, blockId }))\r\n  }\r\n\r\n  const header = (type, block) => {\r\n    let output\r\n    switch (type) {\r\n      case 'page':\r\n        output = 'Outline of:'\r\n        break\r\n      case 'block':\r\n        output = 'Block outline of:'\r\n        break\r\n      case 'references':\r\n        output = <span>References to: <PageLink blockId={block.id}>{block.text}</PageLink></span>\r\n        break\r\n      default:\r\n        output = 'Outline of:'\r\n        break\r\n    }\r\n    return output\r\n  }\r\n\r\n  const viewPaneBlocks = views.map(view => {\r\n    const { type, blockId } = view\r\n    if (!(blockId in blocks)) {\r\n      return null\r\n    }\r\n    const block = blocks[blockId]\r\n    return (\r\n      <div\r\n        key={`${type}-${block.id}`}\r\n        className=\"view-pane__section\"\r\n      >\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          {header(type, block)}\r\n          <X\r\n            className=\"btn-close\"\r\n            onClick={closeBlock.bind(null, type, block.id)}\r\n          />\r\n        </div>\r\n        { type === 'references'\r\n          ? <References block={block} isMain />\r\n          : <Editor blockId={block.id} isRoot isMain={false} />\r\n        }\r\n      </div>\r\n    )\r\n  })\r\n  return (\r\n    <div className=\"pane view-pane\">\r\n      {viewPaneBlocks}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewPane","import React from 'react'\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport './App.scss'\r\n\r\nimport Main from './features/main/Main'\r\nimport FilePane from './features/file-pane/FilePane'\r\nimport ViewPane from './features/view-pane/ViewPane'\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Router>\r\n      <FilePane />\r\n      <Main />\r\n      <ViewPane />\r\n    </Router>\r\n  </div>\r\n)\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport blocksReducer from '../features/block/blockSlice'\r\nimport filePaneReducer from '../features/file-pane/filePaneSlice'\r\nimport viewPaneReducer from '../features/view-pane/viewPaneSlice'\r\nimport navbarReducer from '../features/navbar/navbarSlice'\r\nimport linksReducer from '../features/links/linksSlice'\r\nimport editorReducer from '../features/editor/editorSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    blocks: blocksReducer,\r\n    filePane: filePaneReducer,\r\n    viewPane: viewPaneReducer,\r\n    navbar: navbarReducer,\r\n    links: linksReducer,\r\n    editor: editorReducer\r\n  }\r\n})\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nwindow.addEventListener('beforeunload', event => {\r\n  event.preventDefault()\r\n  event.returnValue = ''\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}